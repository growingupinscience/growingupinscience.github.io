{"version":3,"file":"component---src-pages-events-js-8cdaccba095f6605800c.js","mappings":"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","sources":["webpack://guis-site/./src/pages/events.js","webpack://guis-site/./src/utils/utils.js"],"sourcesContent":["import React, {Component, useState, useEffect, startTransition} from \"react\"\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport { Button, Row, Col, Card} from 'reactstrap';\nimport { getDateFormat } from '../utils/utils';\nimport Layout from '../components/layout'\nimport \"../css/style.css\"\nimport \"../css/mobile.css\"\n\n\nclass Events extends Component {\n  constructor (data, props) {\n    super(data, props);\n    const { edges: eventdata } = data.allMarkdownRemark\n    this.filters = [\"story\", \"nyu\", \"oxford\", \"global\"]\n    this.filtermap = {\n      \"nyu\": \"NYU\", \n      \"story\": \"Story\",\n      \"global\": \"Global\",\n      \"oxford\": \"Oxford\"\n    }\n\n    this.state = {\n      show_nyu: false, \n      show_global: false, \n      events: eventdata, \n      eventdata: eventdata\n    };\n    this.filters.forEach(e => this.state[e] = false)\n\n    this.reset = this.reset.bind(this);\n    this.refresh = this.refresh.bind(this)\n    this.filterby = this.filterby.bind(this)\n  }\n\n  refresh(){\n    this.setState(\n      {events: \n        // for each element in the event data\n        this.state.eventdata.filter(e=> {\n\n          // if all the filters are off, return true\n          var allFalse = true\n          this.filters.forEach(j => \n            allFalse = allFalse && !this.state[j]\n          )\n          var someTrue = false\n          // filter by each filter listed in this.filters\n          this.filters.forEach(j => \n            {someTrue = someTrue || (this.state[j] && e.node.frontmatter.tags.includes(j))}\n          )\n\n          if (allFalse || someTrue){\n            return true\n          }\n          return false\n        }\n        )\n      }\n    )\n  }\n\n  filterby(f){\n    this.state[f] = !this.state[f]\n    this.refresh()\n  }\n\n  reset(){\n    this.filters.forEach(f => \n      this.state[f] = false\n    )\n    this.refresh()\n  }\n\n  render() {\n    console.log(this.filters)\n    var filterButtons = this.filters.map(e => {\n      return <Button onClick={() => this.filterby(e)}\n      style = {{backgroundColor: this.state[e] ? \"var(--btn-select)\" : \"var(--btn)\"}}\n      >{this.filtermap[e]}</Button>\n    })\n\n\n    return (\n      <Layout>\n      <div className = \"page\">\n      <div className = \"section\" style = {{paddingRight: \"5vw\"}}>\n          <h1><span>GUIS Events</span></h1>\n          <br/>\n          <p style={{paddingRight:\"15vw\"}}>\n          NYU events are held in Meyer Hall (4 Washington Place), Room 636, \n          from 17:00-18:00 ET, unless announced otherwise. \n          Graduate students, postdocs, research \n          assistants, undergraduates, faculty, and visitors are all \n          welcome (visitors need to be added to a security check list).  \n          For questions please contact weijima dot nyu dot edu.\n          </p>\n          <h4>Filter by:\n            {filterButtons}\n            <Button size=\"lg\" onClick={() => this.reset()}>Reset</Button>\n          </h4>\n          <div className=\"desktop-only\">\n          <Row style={{paddingTop: \"50px\"}}>\n            <Col xs={2}><h4>Date</h4></Col>\n            <Col xs={6}><h4>Event</h4></Col>\n          </Row>\n          </div>\n          <hr style = {{height: 3}}/>\n          {\n            this.state.events.map(({node: post}) => {\n              if (post.frontmatter.tags.includes(\"year\"))\n              {\n                return (<Row>\n                  <Col lg={3}>{post.frontmatter.title}</Col>\n                </Row>\n                )\n              }\n              else{\n                // filter by tags\n                var tags = post.frontmatter.tags.filter(e => this.filters.includes(e)).map(\n                  e =>{\n                    return <Button className=\"tagbtn\" onClick={() => this.filterby(e)}\n                    style = {{backgroundColor: this.state[e] ? \"var(--btn-select)\" : \"var(--btn)\"}}\n                    >{this.filtermap[e]}</Button>\n                  }\n                )\n                return (\n                  <div>\n                    <div>\n                    <Card className = \"event\" style={{backgroundColor: \"rgba(0, 0, 0, 0)\", border: \"none\"}}>\n                    <Row>\n                      <Col lg={2} xs={12}><h4>{getDateFormat(post.frontmatter.date)}</h4></Col>\n                      <Col lg={4} xs={12}><h4><Link className=\"event-link\" to={post.frontmatter.slug}>{post.frontmatter.title}</Link></h4></Col>\n                      <Col lg={6}>{tags}</Col>\n                    </Row>\n                    </Card>\n                    </div>\n                  </div>\n                )\n                }\n              }\n            )\n          }\n      </div>\n      </div>\n      </Layout>\n    )\n    \n  }\n}\n\nconst AllEvents = (props) => \n  <StaticQuery query={graphql`\n  query{\n    allMarkdownRemark(\n        filter: {frontmatter: {tags : {in: \"event\"}}}\n        sort: { order: DESC, fields: [frontmatter___date] }\n      ){\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            slug\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            location\n          }\n        }\n      }\n    }\n  }\n  `}\n  render = {data => <Events{...data}{...props} />} \n  />\n\nexport default AllEvents;","\nexport function getDayofWeek(datestr){\n    const date = new Date(datestr)\n    const dow = date.getDay()\n    const tostr = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n    return tostr[dow]\n}\n\nexport function getMonthDayFormat(datestr){\n    const date = new Date(datestr)\n    const tostr = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    return tostr[date.getMonth()] + \" \" + String(date.getDate()).padStart(2, \"0\")\n}\n\nexport function getDateFormat(datestr){\n    const date = new Date(datestr)\n    return date.getFullYear() + \"\\t\" + String(date.getMonth() + 1).padStart(2, \"0\") + \"\\t\" + String(date.getDate()).padStart(2, \"0\")\n}\n\n"],"names":["Events","data","props","eventdata","allMarkdownRemark","edges","filters","filtermap","state","show_nyu","show_global","events","forEach","e","reset","bind","refresh","filterby","this","setState","filter","allFalse","j","someTrue","node","frontmatter","tags","includes","f","render","console","log","filterButtons","map","onClick","style","backgroundColor","className","paddingRight","size","paddingTop","xs","height","post","lg","title","border","getDateFormat","date","to","slug","Component","query","getDayofWeek","datestr","Date","getDay","getMonthDayFormat","getMonth","String","getDate","padStart","getFullYear"],"sourceRoot":""}